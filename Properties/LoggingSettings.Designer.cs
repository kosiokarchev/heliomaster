//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace heliomaster.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.5.0.0")]
    public sealed partial class LoggingSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static LoggingSettings defaultInstance = ((LoggingSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new LoggingSettings())));
        
        public static LoggingSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsEnabled {
            get {
                return ((bool)(this["IsEnabled"]));
            }
            set {
                this["IsEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Directory {
            get {
                return ((string)(this["Directory"]));
            }
            set {
                this["Directory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
                    <LoggerParameters xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
                        <IsEnabled>false</IsEnabled>
                        <Filename>heliomaster-debug.log</Filename>
                        <BackupCount>0</BackupCount>
                        <Level>Debug</Level>
                    </LoggerParameters>
                ")]
        public global::heliomaster.LoggerParameters Debug {
            get {
                return ((global::heliomaster.LoggerParameters)(this["Debug"]));
            }
            set {
                this["Debug"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
                    <LoggerParameters xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
                        <IsEnabled>false</IsEnabled>
                        <Filename>heliomaster-info.log</Filename>
                        <BackupCount>0</BackupCount>
                        <Level>Info</Level>
                    </LoggerParameters>
                ")]
        public global::heliomaster.LoggerParameters Info {
            get {
                return ((global::heliomaster.LoggerParameters)(this["Info"]));
            }
            set {
                this["Info"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
                    <LoggerParameters xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
                        <IsEnabled>false</IsEnabled>
                        <Filename>heliomaster-error.log</Filename>
                        <BackupCount>0</BackupCount>
                        <Level>Error</Level>
                    </LoggerParameters>
                ")]
        public global::heliomaster.LoggerParameters Error {
            get {
                return ((global::heliomaster.LoggerParameters)(this["Error"]));
            }
            set {
                this["Error"] = value;
            }
        }
    }
}
