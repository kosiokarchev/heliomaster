//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace heliomaster.Properties {


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.5.0.0")]
    public sealed partial class DomeSettings : global::System.Configuration.ApplicationSettingsBase {

        private static DomeSettings defaultInstance = ((DomeSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new DomeSettings())));

        public static DomeSettings Default {
            get {
                return defaultInstance;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DomeID {
            get {
                return ((string)(this["DomeID"]));
            }
            set {
                this["DomeID"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.5")]
        public double SlaveTolerance {
            get {
                return ((double)(this["SlaveTolerance"]));
            }
            set {
                this["SlaveTolerance"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:05:00")]
        public global::System.TimeSpan SlaveInterval {
            get {
                return ((global::System.TimeSpan)(this["SlaveInterval"]));
            }
            set {
                this["SlaveInterval"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:30:00")]
        public global::System.TimeSpan SlaveCheckup {
            get {
                return ((global::System.TimeSpan)(this["SlaveCheckup"]));
            }
            set {
                this["SlaveCheckup"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AlwaysSoftSlave {
            get {
                return ((bool)(this["AlwaysSoftSlave"]));
            }
            set {
                this["AlwaysSoftSlave"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:01:00")]
        public global::System.TimeSpan ShutterTimeout {
            get {
                return ((global::System.TimeSpan)(this["ShutterTimeout"]));
            }
            set {
                this["ShutterTimeout"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<Dome xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <HasPowerControl>false</HasPowerControl>
  <IsPowerOn xsi:nil=""true"" />
  <HomePosition>0</HomePosition>
  <ParkPosition>0</ParkPosition>
  <HomeToOpen>false</HomeToOpen>
  <RetryClose>false</RetryClose>
</Dome>")]
        public global::heliomaster.Dome Dome {
            get {
                return ((global::heliomaster.Dome)(this["Dome"]));
            }
            set {
                this["Dome"] = value;
            }
        }
    }
}
