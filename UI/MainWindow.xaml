<local:HMWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:heliomaster"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Name="window" x:Class="heliomaster.MainWindow"
        xmlns:properties="clr-namespace:heliomaster.Properties"
        xmlns:ASCOMDeviceInterface="clr-namespace:ASCOM.DeviceInterface;assembly=ASCOM.DeviceInterfaces"
        mc:Ignorable="d"
        Title="MainWindow" DataContext="{x:Static local:O.Default}" Closing="OnExit" SizeToContent="WidthAndHeight" Height="1030" Width="812">
    <local:HMWindow.Resources>
        <xctk:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />

        <DataTemplate x:Key="RateTemplate" DataType="ASCOMDeviceInterface:IRate">
            <StackPanel Orientation="Horizontal">
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0:0.##}-{1:0.##}">
                            <Binding Path="Minimum" />
                            <Binding Path="Maximum" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="HardwareHeaderTemplate" DataType="local:BaseHardwareControl">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Style x:Key="ButtonStyle">
                        <Setter Property="Viewbox.Width" Value="20" />
                        <Setter Property="Viewbox.Height" Value="20" />
                    </Style>
                </Grid.Resources>

                <StackPanel Grid.Column="0" Orientation="Horizontal"
                            Visibility="{Binding HasPowerControl, Converter={local:VisibilityConverter}}">
                    <StackPanel.Resources>
                        <Style x:Key="PowerButtonStyle" BasedOn="{StaticResource ButtonStyle}">
                            <Setter Property="Button.Tag" Value="{x:Static local:HardwareControlButtons.On}" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPowerOn}" Value="True">
                                    <Setter Property="Button.Tag" Value="{x:Static local:HardwareControlButtons.Off}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>

                    <Button Click="HardwareControlButton_Click" Padding="0" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource PowerButtonStyle}">
                        <Viewbox Child="{StaticResource icon-flash}" />
                    </Button>
                    <Button  Padding="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                             Tag="{x:Static local:HardwareControlButtons.Reset}"
                             Click="HardwareControlButton_Click"
                             Style="{StaticResource PowerButtonStyle}">
                        <Viewbox Child="{StaticResource icon-reset}" />
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button  Click="HardwareControlButton_Click">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonStyle}">
                                <Setter Property="Button.Tag" Value="{x:Static local:HardwareControlButtons.Connect}" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Valid}" Value="True">
                                        <Setter Property="Button.Tag" Value="{x:Static local:HardwareControlButtons.Disconnect}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Viewbox Child="{StaticResource icon-link}" />
                    </Button>
                </StackPanel>

                <TextBlock Grid.Column="2"
                           TextTrimming="CharacterEllipsis" MaxWidth="100">
                    <Run Text="{Binding Type, Mode=OneTime}" />
                    <Run Text=": " />
                    <Run Text="{Binding Name, Mode=OneWay}" />
                </TextBlock>
            </Grid>
        </DataTemplate>

        <Style x:Key="HardwareGroupStyle">
            <Setter Property="GroupBox.Header" Value="{Binding}" />
            <Setter Property="GroupBox.HeaderTemplate" Value="{StaticResource HardwareHeaderTemplate}" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding Valid}" Value="True">
                    <Setter Property="GroupBox.BorderBrush" Value="LimeGreen" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Valid}" Value="False">
                    <Setter Property="GroupBox.BorderBrush" Value="Crimson" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </local:HMWindow.Resources>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Cameras" Click="CamerasMenu_Click" />
            <MenuItem Header="_Settings" Click="SettingsMenu_Click" />
        </Menu>

        <Grid x:Name="windowCanvas" DockPanel.Dock="Bottom">

            <Button Content="Capture" HorizontalAlignment="Left" Margin="410,10,0,0" VerticalAlignment="Top" Width="75" Click="Button_Click_1"/>

            <GroupBox Style="{StaticResource HardwareGroupStyle}" HorizontalAlignment="Left" DataContext="{x:Static local:O.Dome}" Height="225" Margin="189,158,0,0" VerticalAlignment="Top" Width="216">
                <GroupBox.Resources>
                    <Style x:Key="NavButtonStyle">
                        <Setter Property="Button.IsEnabled" Value="False" />

                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Moveable}" Value="True" />
                                    <Condition Binding="{Binding IsSlaving, Source='{x:Static local:O.Default}'}" Value="False" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Button.IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Resources>

                <Grid Margin="0" IsEnabled="{Binding Valid}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Border BorderBrush="Black" BorderThickness="2" Grid.Row="0">
                        <Image Margin="0"/>
                    </Border>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center">
                            <Label Content="Az"/>
                            <Label Content="{Binding Azimuth, ConverterParameter=degrees, Converter={local:AngleDisplayConverter}, FallbackValue={x:Static properties:Resources.notavailable}, Mode=OneWay}" />
                        </StackPanel>

                        <Grid Grid.Column="1" VerticalAlignment="Center" MinWidth="100">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="DomeMinusButton" Grid.Column="0" Content="-" Click="domeSlewButton_Click"
                                    Tag="{x:Static ASCOMDeviceInterface:GuideDirections.guideEast}"
                                    Style="{StaticResource NavButtonStyle}" />
                            <Button x:Name="DomePlusButton" Grid.Column="2" Content="+" Click="domeSlewButton_Click"
                                    Tag="{x:Static ASCOMDeviceInterface:GuideDirections.guideWest}"
                                    Style="{StaticResource NavButtonStyle}" />

                            <Button x:Name="DomeStopButton" Grid.Column="1" Content="O" Click="domeSlewButton_Click"
                                    IsEnabled="{Binding Valid}"/>
                        </Grid>
                    </Grid>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" DataContext="{Binding ElementName=DomePulseSlider}" Content="{Binding CustomValue}" ContentStringFormat="{Binding ToolTipFormat}" />
                        <local:ScaledSlider x:Name="DomePulseSlider" Grid.Column="1"
                                        AutoToolTipPlacement="TopLeft" ToolTipFormat="{}{0:F1}°/nudge"
                                        Minimum="0" Maximum="1"
                                        CustomMinimum="0.5" CustomMaximum="90"
                                        ValueToCustom="{Binding LogValueToCustom, RelativeSource={RelativeSource Self}}"
                                        CustomToValue="{Binding LogCustomToValue, RelativeSource={RelativeSource Self}}" />
                    </Grid>

                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel>
                            <CheckBox Content="{x:Static properties:Resources.athome}" IsEnabled="False"
                                  IsChecked="{Binding AtHome, Mode=OneWay}"/>
                            <CheckBox Content="{x:Static properties:Resources.atpark}" IsEnabled="False"
                                  IsChecked="{Binding AtPark, Mode=OneWay}"/>
                            <CheckBox Content="{x:Static properties:Resources.slewing}" IsEnabled="False"
                                  IsChecked="{Binding Slewing, Mode=OneWay}"/>
                            <CheckBox Content="{x:Static properties:Resources.slaved}" IsEnabled="False"
                                  IsChecked="{Binding Slaved, Mode=OneWay}"/>
                        </StackPanel>

                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="DomeOpenButton"
                                Grid.Row="0" Grid.Column="0"
                                IsEnabled="{Binding CanShutter, FallbackValue=false, Mode=OneWay}"
                                Content="{x:Static properties:Resources.open}"
                                ToolTip="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Click="domeControlButton_Click" />
                            <Button x:Name="DomeCloseButton"
                                Grid.Row="0" Grid.Column="1"
                                IsEnabled="{Binding CanShutter, FallbackValue=false, Mode=OneWay}"
                                Content="{x:Static properties:Resources.close}"
                                ToolTip="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Click="domeControlButton_Click" />
                            <Button x:Name="DomeSlaveButton"
                                Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                                ToolTip="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Click="domeControlButton_Click">
                                <Button.Style>
                                    <Style>
                                        <Setter Property="Button.Content" Value="{x:Static properties:Resources.slave}" />

                                        <Setter Property="Button.IsEnabled" Value="False" />

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSlaving, Source={x:Static local:O.Default}}" Value="true">
                                                <Setter Property="Button.Content" Value="{x:Static properties:Resources.unslave}" />
                                            </DataTrigger>

                                            <MultiDataTrigger >
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Slewing}" Value="False" />
                                                    <Condition Binding="{Binding Valid, Source='{x:Static local:O.Mount}'}" Value="True" />
                                                    <Condition Binding="{Binding Valid, Source='{x:Static local:O.Dome}'}" Value="True" />
                                                </MultiDataTrigger.Conditions>

                                                <Setter Property="Button.IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="DomeParkButton"
                                Grid.Row="2" Grid.Column="0"
                                IsEnabled="{Binding CanPark, FallbackValue=false, Mode=OneWay}"
                                Content="{x:Static properties:Resources.park}"
                                ToolTip="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Click="domeControlButton_Click" />
                            <Button x:Name="DomeHomeButton"
                                Grid.Row="2" Grid.Column="1"
                                IsEnabled="{Binding CanHome, FallbackValue=false, Mode=OneWay}"
                                Content="{x:Static properties:Resources.home}"
                                ToolTip="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Click="domeControlButton_Click" />
                        </Grid>
                    </Grid>
                </Grid>
            </GroupBox>

            <GroupBox Style="{StaticResource HardwareGroupStyle}" Grid.Row="0" DataContext="{Binding Source={x:Static local:O.Weather}}" Margin="189,10,0,0" HorizontalAlignment="Left" Width="216" Height="143" VerticalAlignment="Top">
                <GroupBox.BorderBrush>
                    <PriorityBinding>
                        <Binding Path="Condition" Converter="{local:WeatherConditionConverter}" />
                        <Binding Path="borderColor" Source="{x:Static properties:Settings.Default}" Converter="{StaticResource ColorToSolidColorBrushConverter}" />
                    </PriorityBinding>
                </GroupBox.BorderBrush>
                <WrapPanel Margin="0">
                    <Grid HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.RowSpan="2" Child="{StaticResource icon-thermometer}"/>
                        <ContentControl Content="{Binding Temperature}" Grid.Row="0" Grid.Column="1" Margin="0" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                        <ContentControl Content="{Binding Pressure}" Grid.Column="1" Margin="0" ContentTemplate="{StaticResource WeatherItemTemplate}" Grid.Row="1"/>
                    </Grid>
                    <Grid HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.RowSpan="3" Child="{StaticResource icon-droplet}"/>
                        <ContentControl Content="{Binding Humidity}" Grid.Row="0" Grid.Column="1" Margin="0" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                        <ContentControl Content="{Binding RainRate}" Grid.Column="1" Margin="0" ContentTemplate="{StaticResource WeatherItemTemplate}" Grid.Row="1"/>
                        <ContentControl Content="{Binding DewPoint}" Grid.Column="1" Margin="0" ContentTemplate="{StaticResource WeatherItemTemplate}" Grid.Row="2"/>
                    </Grid>
                    <Grid Margin="0" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ContentControl Content="{Binding CloudCover}" Grid.Row="0" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                        <ContentControl Content="{Binding SkyBrightness}" Grid.Row="1" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                        <ContentControl Content="{Binding SkyQuality}" Grid.Row="2" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                        <ContentControl Content="{Binding SkyTemperature}" Grid.Row="3" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                        <ContentControl Content="{Binding StarFWHM}" Grid.Row="4" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                    </Grid>
                    <Grid HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MaxWidth="24"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.RowSpan="3" Width="24" Child="{StaticResource icon-vane}" />
                        <ContentControl Content="{Binding WindSpeed}" Grid.Row="0" Grid.Column="1" ContentTemplate="{StaticResource WeatherItemTemplate}"/>
                        <ContentControl Content="{Binding WindGust}" Grid.Column="1" ContentTemplate="{StaticResource WeatherItemTemplate}" Grid.Row="1"/>
                        <ContentControl Content="{Binding WindDirection}" Grid.Column="1" ContentTemplate="{StaticResource WeatherItemTemplate}" Grid.Row="2"/>
                    </Grid>
                </WrapPanel>
            </GroupBox>

            <GroupBox  Style="{StaticResource HardwareGroupStyle}" HorizontalAlignment="Left" Margin="10,12,0,0" VerticalAlignment="Top"
                      DataContext="{x:Static local:O.Mount}">
                <GroupBox.Resources>
                    <Style x:Key="NavButtonStyle">
                        <Setter Property="Button.IsEnabled" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Moveable}" Value="False">
                                <Setter Property="Button.IsEnabled" Value="False" />
                            </DataTrigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter Property="Button.IsEnabled" Value="True" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Resources>

                <Grid Margin="0" IsEnabled="{Binding Valid}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,3,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static properties:Resources.ra}" Padding="0,0,3,0" />
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ToolTipContent, ElementName=PrimaryRateSlider}" />
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static properties:Resources.dec}" Padding="0,0,3,0"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ToolTipContent, ElementName=SecondaryRateSlider}" />
                        </Grid>

                        <Grid Margin="0" Grid.Row="1" Grid.Column="1" Width="100" Height="100">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Button Grid.Row="0" Grid.Column="0" Click="MountParkButton_Click">
                                <Button.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding AtPark}" Value="True">
                                                <Setter Property="Button.Content" Value="{x:Static properties:Resources.unpark}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding AtPark}" Value="False">
                                                <Setter Property="Button.Content" Value="{x:Static properties:Resources.park}" />
                                                <Setter Property="Button.IsEnabled">
                                                    <Setter.Value>
                                                        <Binding Path="Moveable" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Grid.Row="1" Grid.Column="1" Content="STOP"
                                    Click="mountStop_Click" />

                            <Button Grid.Row="0" Grid.Column="1" Content="N"
                                    Tag="{x:Static ASCOMDeviceInterface:GuideDirections.guideNorth}"
                                    PreviewMouseDown="mountNav_Interact" PreviewMouseUp="mountNav_Interact"
                                    Style="{StaticResource NavButtonStyle}" />
                            <Button Grid.Row="2" Grid.Column="1" Content="S"
                                    Tag="{x:Static ASCOMDeviceInterface:GuideDirections.guideSouth}"
                                    PreviewMouseDown="mountNav_Interact" PreviewMouseUp="mountNav_Interact"
                                    Style="{StaticResource NavButtonStyle}" />
                            <Button Grid.Row="1" Grid.Column="0" Content="+"
                                    Tag="{x:Static ASCOMDeviceInterface:GuideDirections.guideEast}"
                                    PreviewMouseDown="mountNav_Interact" PreviewMouseUp="mountNav_Interact"
                                    Style="{StaticResource NavButtonStyle}" />
                            <Button Grid.Row="1" Grid.Column="2" Content="-"
                                    Tag="{x:Static ASCOMDeviceInterface:GuideDirections.guideWest}"
                                    PreviewMouseDown="mountNav_Interact" PreviewMouseUp="mountNav_Interact"
                                    Style="{StaticResource NavButtonStyle}" />
                        </Grid>

                        <ComboBox x:Name="PrimaryRatesCombobox"
                                  Grid.Row="2" Grid.Column="0" Height="25" Width="25"
                                  Margin="3" HorizontalAlignment="Right" VerticalAlignment="Center"
                                  IsEnabled="{Binding IsChecked, ElementName=EnableRates}"
                                  ItemsSource="{Binding SecondaryAxisRates, Mode=OneWay}"
                                  SelectedIndex="{Binding SelectedPrimaryRateIndex}"
                                  ItemTemplate="{StaticResource RateTemplate}" />
                        <Grid Grid.Row="2" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" VerticalAlignment="Center"
                                       Text="{Binding CustomMinimum, ElementName=PrimaryRateSlider, StringFormat='{}{0:0.##}'}" Margin="0,0,3,0" />
                            <local:ScaledSlider x:Name="PrimaryRateSlider" Orientation="Horizontal"
                                                Grid.Column="1" VerticalAlignment="Center"
                                                IsEnabled="{Binding IsChecked, ElementName=EnableRates}"
                                                Minimum="0" Maximum="1"
                                                AutoToolTipPlacement="TopLeft"
                                                ToolTipFormatter="{x:Static local:Utilities.RateFormatter}"
                                                CustomMinimum="{Binding SelectedItem.(ASCOMDeviceInterface:IRate.Minimum),
                                                                        ElementName=PrimaryRatesCombobox}"
                                                CustomMaximum="{Binding SelectedItem.(ASCOMDeviceInterface:IRate.Maximum),
                                                                        ElementName=PrimaryRatesCombobox}"
                                                ValueToCustom="{Binding LogValueToCustom, RelativeSource={RelativeSource Self}}"
                                                CustomToValue="{Binding LogCustomToValue, RelativeSource={RelativeSource Self}}"
                                                CustomValue="{Binding RatePrimary, Mode=TwoWay}" />
                            <TextBlock Grid.Column="2" VerticalAlignment="Center"
                                       Text="{Binding CustomMaximum, ElementName=PrimaryRateSlider, StringFormat='{}{0:0.##}'}" Margin="3,0" />
                        </Grid>

                        <ComboBox x:Name="SecondaryRatesComboBox"
                                  Grid.Row="0" Grid.Column="2" Height="25" Width="25"
                                  Margin="3" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                  IsEnabled="{Binding IsChecked, ElementName=EnableRates}"
                                  ItemsSource="{Binding SecondaryAxisRates, Mode=OneWay}"
                                  SelectedIndex="{Binding SelectedSecondaryRateIndex}"
                                  ItemTemplate="{StaticResource RateTemplate}" />
                        <Grid Grid.Row="1" Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" HorizontalAlignment="Center"
                                       Text="{Binding CustomMaximum, ElementName=SecondaryRateSlider, StringFormat='{}{0:0.##}'}" Margin="0,3" />
                            <local:ScaledSlider x:Name="SecondaryRateSlider" Orientation="Vertical"
                                                Grid.Row="1" HorizontalAlignment="Center"
                                                IsEnabled="{Binding IsChecked, ElementName=EnableRates}"
                                                Minimum="0" Maximum="1"
                                                AutoToolTipPlacement="TopLeft"
                                                ToolTipFormatter="{x:Static local:Utilities.RateFormatter}"
                                                CustomMinimum="{Binding SelectedItem.(ASCOMDeviceInterface:IRate.Minimum),
                                                                        ElementName=SecondaryRatesComboBox}"
                                                CustomMaximum="{Binding SelectedItem.(ASCOMDeviceInterface:IRate.Maximum),
                                                                        ElementName=SecondaryRatesComboBox}"
                                                ValueToCustom="{Binding LogValueToCustom, RelativeSource={RelativeSource Self}}"
                                                CustomToValue="{Binding LogCustomToValue, RelativeSource={RelativeSource Self}}"
                                                CustomValue="{Binding RateSecondary, Mode=TwoWay}" />
                            <TextBlock Grid.Row="2" HorizontalAlignment="Center"
                                       Text="{Binding CustomMinimum, ElementName=SecondaryRateSlider, StringFormat='{}{0:0.##}'}" Margin="0,3" />
                        </Grid>

                        <CheckBox Name="EnableRates" Grid.Column="2" Margin="0" Grid.Row="2" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static properties:Resources.lst}" />
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static properties:Resources.ra}" />
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static properties:Resources.dec}" />
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static properties:Resources.az}" />
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="{x:Static properties:Resources.alt}" />

                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="3,0,0,0"
                                       Text="{Binding SiderealTime, ConverterParameter=hours, Converter={local:AngleDisplayConverter},
                                                      FallbackValue={x:Static properties:Resources.notavailable}}" />
                            <TextBlock Grid.Row="1" Grid.Column="1" Margin="3,0,0,0"
                                       Text="{Binding RightAscension, ConverterParameter=hours, Converter={local:AngleDisplayConverter},
                                                      FallbackValue={x:Static properties:Resources.notavailable}}" />
                            <TextBlock Grid.Row="2" Grid.Column="1" Margin="3,0,0,0"
                                       Text="{Binding Declination, ConverterParameter=degrees, Converter={local:AngleDisplayConverter},
                                                      FallbackValue={x:Static properties:Resources.notavailable}}" />
                            <TextBlock Grid.Row="3" Grid.Column="1" Margin="3,0,0,0"
                                       Text="{Binding Azimuth, ConverterParameter=degrees, Converter={local:AngleDisplayConverter},
                                                      FallbackValue={x:Static properties:Resources.notavailable}}" />
                            <TextBlock Grid.Row="4" Grid.Column="1" Margin="3,0,0,0"
                                       Text="{Binding Altitude, ConverterParameter=degrees, Converter={local:AngleDisplayConverter},
                                                      FallbackValue={x:Static properties:Resources.notavailable}}" />
                        </Grid>

                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <CheckBox Content="{x:Static properties:Resources.parked}"
                                      IsEnabled="False"
                                      IsChecked="{Binding AtPark, Mode=OneWay}"/>
                            <CheckBox Content="{x:Static properties:Resources.slewing}"
                                      IsEnabled="False"
                                      IsChecked="{Binding Slewing, Mode=OneWay}"/>
                            <CheckBox Content="Tracking"
                                      IsEnabled="False"
                                      IsChecked="{Binding Tracking, Mode=OneWay}" />
                        </StackPanel>
                    </Grid>

                    <CheckBox Grid.Row="2" VerticalAlignment="Top">
                        <CheckBox.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Tracking:" VerticalAlignment="Center" Padding="0" Margin="5,0" />
                                <ComboBox>
                                    <ComboBoxItem IsSelected="True">
                                        <TextBlock Text="sidereal" />
                                    </ComboBoxItem>
                                    <ComboBoxItem>
                                        <TextBlock Text="image" />
                                    </ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                        </CheckBox.Content>
                    </CheckBox>

                    <StackPanel Grid.Row="3" Orientation="Horizontal" IsEnabled="{Binding IsEnabled, Source={x:Static properties:S.Python}}">
                        <Button Content="{x:Static properties:Resources.goto_}" Click="MountGoTo" />
                        <ComboBox>
                            <ComboBoxItem IsSelected="True">
                                <TextBlock Text="Sun" />
                            </ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Header="GroupBox" HorizontalAlignment="Left" Height="114" Margin="452,443,0,0" VerticalAlignment="Top" Width="222">
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Button Content="Run until" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Click="RunUntilButton_Click"/>
                    <xctk:DateTimeUpDown Grid.Row="0" Grid.Column="1" x:Name="ShutdownTime" CurrentDateTimePart="Minute" Format="SortableDateTime" />

                    <Button Grid.Row="1" Grid.Column="0" Content="Shutdown" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Click="Button_Click"/>

                    <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center">
                        <Button.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WeatherProtectionOn}" Value="False">
                                        <Setter Property="Button.Content" Value="Protect" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WeatherProtectionOn}" Value="True">
                                        <Setter Property="Button.Content" Value="Unprotect" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Label Grid.Row="2" Grid.Column="0" Content="{Binding AutomationState}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </Grid>
            </GroupBox>
        </Grid>
    </DockPanel>
</local:HMWindow>
