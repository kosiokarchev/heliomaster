<Window x:Class="heliomaster.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:heliomaster"
        xmlns:properties="clr-namespace:heliomaster.Properties"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="SettingsWindow" SizeToContent="WidthAndHeight" MinWidth="640" MinHeight="480">
    <Window.Resources>
        <Style x:Key="HideWhenRemoteLoginMethodIsPasswordStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LoginMethod}" Value="{x:Static local:RemoteLoginMethods.UserPass}">
                    <Setter Property="UIElement.Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HideWhenRemoteLoginMethodIsPrivateKeyStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LoginMethod}" Value="{x:Static local:RemoteLoginMethods.PrivateKey}">
                    <Setter Property="UIElement.Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NotChosenStyle">
            <Setter Property="TextBox.Text" Value="{Binding Mode=OneWay}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Mode=OneWay}" Value="">
                    <Setter Property="TextBox.Text" Value="{x:Static properties:Resources.notchosen}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SetToDefaultStyle">
            <Style.Triggers>
                <Trigger Property="TextBox.Text" Value="">
                    <Setter Property="TextBox.Background" Value="DarkGray" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl Margin="0" TabStripPlacement="Left">
            <TabItem Header="General">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
            <TabItem Header="Dome" DataContext="{x:Static properties:S.Dome}">
                <Grid Background="#FFE5E5E5">
                    <StackPanel Margin="3">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="DriverID:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"/>
                            <TextBox IsEnabled="False" Grid.Column="1" DataContext="{Binding DomeID}" Style="{StaticResource NotChosenStyle}" VerticalAlignment="Center" Margin="0,0,5,0" />
                            <Button x:Name="DomeChooseButton" Grid.Column="2" Content="Choose" Click="ChooseButton_Click" VerticalAlignment="Center" />
                        </Grid>

                        <StackPanel>
                            <Label Content="Shutter" />
                            <Grid Margin="20,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <CheckBox IsChecked="{Binding Dome.HomeToShutter}"
                                          Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"
                                          Content="Shutter contol only when at home" />
                                <CheckBox IsChecked="{Binding Dome.RetryShutter}"
                                          Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3"
                                          Content="Automatically retry to close shutter on failure" />

                                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"
                                           Text="Timeout:" Margin="0,5,0,0" HorizontalAlignment="Right" />
                                <xctk:TimeSpanUpDown Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                                                     Value="{Binding ShutterTimeout}" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="5,5,0,0" ClipValueToMinMax="True" Minimum="0:0:1" />

                                <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"
                                           Text="Home Az:" HorizontalAlignment="Right"  />
                                <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1"
                                                   Value="{Binding Dome.HomePosition}" Margin="5,5,5,0" Minimum="0" Maximum="360" ClipValueToMinMax="True" MinWidth="50" />
                                <TextBlock Grid.Row="3" Grid.Column="2" Text="degrees" VerticalAlignment="Center" Margin="0,5,0,0" />

                                <TextBlock Grid.Row="4" Grid.Column="0" Text="Park Az:" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                <xctk:DoubleUpDown Grid.Row="4" Grid.Column="1"
                                                   Value="{Binding Dome.ParkPosition}" Margin="5,5,5,0" Minimum="0" Maximum="360" ClipValueToMinMax="True" MinWidth="50" />
                                <TextBlock Grid.Row="4" Grid.Column="2" Text="degrees" VerticalAlignment="Center" Margin="0,5,0,0" />
                            </Grid>

                            <Label Content="Software slaving" Margin="0,10,0,0" />
                            <StackPanel Margin="20,0,0,0">
                                <StackPanel.Resources>
                                    <Style x:Key="AlwaysSoftStyle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding AlwaysSoftSlave}" Value="True">
                                                <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Resources>
                                <CheckBox IsChecked="{Binding AlwaysSoftSlave}" Content="Do not use hardware slaving." />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Checkup:" Margin="0" VerticalAlignment="Center" Padding="0,5,0,0" Style="{StaticResource AlwaysSoftStyle}" />
                                    <xctk:TimeSpanUpDown Grid.Row="0" Grid.Column="1" Value="{Binding SlaveCheckup}" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="5,5,0,0" Style="{StaticResource AlwaysSoftStyle}" />
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="check the operation of hardware slaving and adjust as necessary" Padding="5,0,0,0" Style="{StaticResource AlwaysSoftStyle}" />

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Polling:" VerticalAlignment="Center" Padding="0,5,0,0" />
                                    <xctk:TimeSpanUpDown Grid.Row="2" Grid.Column="1" Value="{Binding SlaveInterval}" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Center" Minimum="0" CurrentDateTimePart="Minute" ClipValueToMinMax="True" />

                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Tolerance:" VerticalAlignment="Center" Padding="0,5,0,0" />
                                    <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                                        <xctk:DoubleUpDown Value="{Binding SlaveTolerance}" Margin="5,5,5,0" Minimum="0" ClipValueToMinMax="True" FormatString="{}{0:0.#}" ShowButtonSpinner="False" DefaultValue="0" MinWidth="50" />
                                        <TextBlock Text="degrees" Margin="0,5,0,0" VerticalAlignment="Center" />
                                    </StackPanel>

                                </Grid>
                            </StackPanel>
                        </StackPanel>

                        <ListView ItemsSource="{Binding Path=DomeCans, RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}" IsEnabled="False" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Mount" DataContext="{x:Static properties:S.Mount}">
                <Grid Background="#FFE5E5E5">
                    <StackPanel Margin="3">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="DriverID:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"/>
                            <TextBox IsEnabled="False" Grid.Column="1" DataContext="{Binding MountID}" Style="{StaticResource NotChosenStyle}" VerticalAlignment="Center" Margin="0,0,5,0" />
                            <Button x:Name="MountChooseButton" Grid.Column="2" Content="Choose" Click="ChooseButton_Click" VerticalAlignment="Center" />
                        </Grid>
                        <CheckBox Content="Telescope is flipped:" IsChecked="{Binding Telescope.NSFlip}" />
                        <TextBlock Margin="20,0,0,0" TextWrapping="Wrap" Text="If this box is checked, the positive declination motor direction will correspond to a southward motion of the open end of the telescope." />

                        <TextBlock Margin="0,10,0,0" Text="Dynamic adjustment" />
                        <Grid Margin="20,0,0,0" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Grid.Resources>
                                <Style TargetType="{x:Type xctk:DoubleUpDown}">
                                    <Setter Property="Margin" Value="5,0,0,0" />
                                    <Setter Property="ButtonSpinnerLocation" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="TextAlignment" Value="Left" />
                                </Style>
                                <Style TargetType="{x:Type xctk:IntegerUpDown}">
                                    <Setter Property="Margin" Value="5,0,0,0" />
                                    <Setter Property="ButtonSpinnerLocation" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="TextAlignment" Value="Left" />
                                </Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="3,0,0,0" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </Grid.Resources>

                            <Label Grid.Row="0" Grid.Column="0"
                                   Content="Timescale:"/>
                            <xctk:DoubleUpDown Grid.Row="0" Grid.Column="1" Value="{Binding Telescope.AdjustDuration}" />
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="s" />

                            <Label Grid.Row="1" Grid.Column="0"
                                   Content="Steps:"/>
                            <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                                                Value="{Binding Telescope.AdjustNTrials}" />
                            <Label Grid.Row="2" Grid.Column="0"
                                   Content="RA tolerance:"/>
                            <xctk:DoubleUpDown Grid.Row="2" Grid.Column="1"
                                               Value="{Binding Telescope.AdjustToleranceRaCosDec}" />
                            <TextBlock Grid.Row="2" Grid.Column="2" Text="° / cos(Dec)" />

                            <Label Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                                   Content="Dec tolerance:"/>
                            <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1"
                                               Value="{Binding Telescope.AdjustToleranceDec}" />
                            <TextBlock Grid.Row="3" Grid.Column="2" Text="°" />
                        </Grid>

                        <ListView ItemsSource="{Binding Path=MountCans, RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}" IsEnabled="False" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Cameras" DataContext="{x:Static properties:S.Cameras}">
                <Grid Background="#FFE5E5E5">
                    <StackPanel>
                        <Grid Margin="0" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Number of cameras:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"/>
                            <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Value="{Binding CameraModels.Count, Mode=OneWay}" />
                        </Grid>

                        <CheckBox IsChecked="{Binding SaveTransformed}" Content="Save images already transformed" />

                        <TabControl ItemsSource="{Binding CameraModels}" TabStripPlacement="Left" Margin="0,20,0,0">
                            <TabControl.ItemTemplate>
                                <DataTemplate DataType="local:CameraModel">
                                    <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </TabControl.ItemTemplate>
                            <TabControl.ContentTemplate>
                                <DataTemplate DataType="local:CameraModel">
                                    <Grid Margin="10,31,0,0" VerticalAlignment="Top">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Type:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"/>
                                        <ComboBox Grid.Row="0" Grid.Column="1" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                  ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:CameraTypes}}}"
                                                  SelectedIndex="{Binding CameraType, Converter={local:EnumToIntConverter}}" />

                                        <Label Content="ID:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" />

                                        <Grid Grid.Row="1" Grid.Column="1">
                                            <Grid.Style>
                                                <Style>
                                                    <Setter Property="Grid.Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding CameraType}" Value="{x:Static local:CameraTypes.ASCOM}">
                                                            <Setter Property="Grid.Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBox IsEnabled="False" Grid.Column="0" DataContext="{Binding CameraID}" Style="{StaticResource NotChosenStyle}" VerticalAlignment="Center" Margin="0,0,5,0" />
                                            <Button Grid.Column="1" Content="Choose" Click="ChooseButton_Click" VerticalAlignment="Center" />
                                        </Grid>

                                        <Grid Grid.Row="1" Grid.Column="1">
                                            <Grid.Style>
                                                <Style>
                                                    <Setter Property="Grid.Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding CameraType}" Value="{x:Static local:CameraTypes.QHYCCD}">
                                                            <Setter Property="Grid.Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <ComboBox VerticalAlignment="Center"
                                                      ItemsSource="{x:Static local:QHYCCDCamera.CameraIDs}"
                                                      SelectedItem="{Binding CameraID}" />
                                            <Button Grid.Column="1" Content="Refresh list" />
                                        </Grid>

                                        <Label Content="Focuser DriverID" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Grid.Row="7" Grid.Column="0" />
                                        <Grid Grid.Row="7" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBox IsEnabled="False" Grid.Column="0" DataContext="{Binding FocuserID}" Style="{StaticResource NotChosenStyle}" VerticalAlignment="Center" Margin="0,0,5,0" />
                                            <Button Tag="focuser" Grid.Column="1" Content="Choose" Click="ChooseButton_Click" VerticalAlignment="Center" />
                                        </Grid>

                                        <Label Grid.Row="2" Grid.Column="0" Content="Alias:" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />

                                        <Label Grid.Row="3" Grid.Column="0" Content="Local name format:" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding LocalPathFormat, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Style="{StaticResource SetToDefaultStyle}" />

                                        <Label Grid.Row="4" Grid.Column="0" Content="Remote name format:" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding RemotePathFormat, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Style="{StaticResource SetToDefaultStyle}" />

                                        <Label Grid.Row="5" Grid.Column="0" Content="Remote command format:" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding RemoteCommandFormat, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Style="{StaticResource SetToDefaultStyle}" />

                                        <Label Grid.Row="6" Grid.Column="0" Content="Image transform:" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <Grid Grid.Column="1" Margin="0" Grid.Row="6">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="1" Margin="0" Grid.RowSpan="2" MinHeight="100" Source="/heliomaster-wpf;component/Resources/compass.png" MaxHeight="150" LayoutTransform="{Binding Transform.Inverse}"/>
                                            <CheckBox Grid.Row="0" Grid.Column="0" Content="flip" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Bottom" IsChecked="{Binding Flip}"/>
                                            <ComboBox Grid.Row="1" Grid.Column="0" SelectedIndex="{Binding Rotate}" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <TextBlock Text="0°"/>
                                                <TextBlock Text="CCW 90°" />
                                                <TextBlock Text="CCW 180°" />
                                                <TextBlock Text="CCW 270°" />
                                            </ComboBox>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </TabControl.ContentTemplate>
                        </TabControl>

                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Timelapse">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
            <TabItem Header="Weather" DataContext="{x:Static properties:S.Weather}">
                <Grid Background="#FFE5E5E5">
                    <StackPanel Margin="5">
                        <CheckBox IsChecked="{Binding UseFile}"
                                  Content="Read from file" />

                        <Grid>
                            <Grid.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UseFile}" Value="True">
                                            <Setter Property="Grid.Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Content="WeatherID:" />
                            <TextBox Grid.Column="1" VerticalAlignment="Center" Margin="0,0,5,0"
                                     IsEnabled="False"
                                     DataContext="{Binding WeatherID}" Style="{StaticResource NotChosenStyle}" />
                            <Button Grid.Column="2" VerticalAlignment="Center"
                                    Content="Choose" Click="ChooseButton_Click" />
                        </Grid>

                        <Grid Visibility="{Binding UseFile, Converter={local:VisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Content="Filename:" />
                            <TextBox Grid.Column="1" VerticalAlignment="Center" Margin="0,0,5,0"
                                     Text="{Binding FilePath}" />
                            <Button Grid.Column="2" VerticalAlignment="Center"
                                    Content="Browse" Click="BrowseButton_Click" />
                        </Grid>

                        <Border DataContext="{x:Static local:O.Weather}" BorderBrush="{Binding Condition, Converter={local:WeatherConditionConverter}}" BorderThickness="2">
                            <ListView Margin="0" ItemsSource="{Binding Items}">
                                <ListView.View>
                                    <GridView>
                                        <GridView.Columns>
                                            <GridViewColumn Header="Name" DisplayMemberBinding="{Binding DisplayName}" />
                                            <GridViewColumn Header="OK?">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate DataType="local:WeatherItem">
                                                        <CheckBox IsChecked="{Binding Neglect}" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Rev?">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate DataType="local:WeatherItem">
                                                        <CheckBox IsChecked="{Binding BoundsReversed}" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Warning">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate DataType="local:WeatherItem">
                                                        <xctk:DoubleUpDown FormatString="{Binding ValueFormat}" Visibility="{Binding CanSetRange, Converter={local:VisibilityConverter}}" >
                                                            <xctk:DoubleUpDown.Style>
                                                                <Style>
                                                                    <Setter Property="xctk:DoubleUpDown.Value" Value="{Binding BoundLow}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding BoundsReversed}" Value="true">
                                                                            <Setter Property="xctk:DoubleUpDown.Value" Value="{Binding BoundHigh}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </xctk:DoubleUpDown.Style>
                                                        </xctk:DoubleUpDown>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Bad">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate DataType="local:WeatherItem">
                                                        <xctk:DoubleUpDown FormatString="{Binding ValueFormat}" Visibility="{Binding CanSetRange, Converter={local:VisibilityConverter}}" >
                                                            <xctk:DoubleUpDown.Style>
                                                                <Style>
                                                                    <Setter Property="xctk:DoubleUpDown.Value" Value="{Binding BoundHigh}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding BoundsReversed}" Value="true">
                                                                            <Setter Property="xctk:DoubleUpDown.Value" Value="{Binding BoundLow}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </xctk:DoubleUpDown.Style>
                                                        </xctk:DoubleUpDown>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Value">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate DataType="local:WeatherItem">
                                                        <Label Style="{StaticResource WeatherItemLabelStyle}" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView.Columns>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Border>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Remote" DataContext="{x:Static properties:S.Remote}">
                <Grid Background="#FFE5E5E5">
                    <StackPanel Margin="5">
                        <Grid x:Name="RemoteSettingsGrid" Margin="0,3,0,5" VerticalAlignment="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Host:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"/>
                            <Grid VerticalAlignment="Center" Margin="0" Grid.Row="0" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Host, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" />
                                <TextBlock Text=":" Grid.Column="1" />
                                <xctk:IntegerUpDown Grid.Column="2" Minimum="0" Maximum="65535" Value="{Binding Port}" />
                            </Grid>

                            <Label Content="User name:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Grid.Row="1"
                               Grid.Column="0" />
                            <TextBox Height="23" Margin="0" TextWrapping="Wrap" VerticalAlignment="Center"
                             Text="{Binding User, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1"/>

                            <Label Content="Auth type:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Grid.Row="2"
                               Grid.Column="0" />
                            <ComboBox x:Name="LoginMethodComboBox" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                                  ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:RemoteLoginMethods}}}"
                                  SelectedIndex="{Binding LoginMethod, Converter={local:EnumToIntConverter}}" Grid.Column="1" Grid.Row="2" />

                            <Label x:Name="LoginMethodUserPassLabel" Content="Password:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Grid.Row="3"
                               Grid.Column="0" Style="{StaticResource HideWhenRemoteLoginMethodIsPrivateKeyStyle}" />
                            <PasswordBox x:Name="RemotePasswordBox" Margin="0" VerticalAlignment="Center"
                                         PasswordChanged="RemotePasswordBox_PasswordChanged" Grid.Row="3" Grid.Column="1"
                                         Style="{StaticResource HideWhenRemoteLoginMethodIsPrivateKeyStyle}"/>

                            <Grid x:Name="LoginMethodKeyfileGrid"  HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                                  Style="{StaticResource HideWhenRemoteLoginMethodIsPasswordStyle}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding PrivateKeyFilename, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" />
                                <Button Content="Browse" Grid.Column="1" Height="22" VerticalAlignment="Top" Click="BrowseButton_Click" />
                            </Grid>

                            <Button x:Name="RemoteTestConnectionButton" Grid.Row="5" Grid.ColumnSpan="2" Grid.Column="0"
                                    Content="Test Connection" HorizontalAlignment="Center" Margin="0,5,0,0" Click="RemoteTestConnectionButton_Click" />
                        </Grid>
                        <StackPanel Margin="0,5">
                            <CheckBox IsChecked="{Binding DoInitCommand}" Content="Run command when SSH is connected"/>
                            <TextBox Text="{Binding InitCommand, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding DoInitCommand, Converter={local:VisibilityConverter}}" Margin="20,0,0,0" />
                        </StackPanel>
                        <StackPanel Margin="0
                                    ,5" VerticalAlignment="Top">
                            <CheckBox IsChecked="{Binding DoTransfer}" Content="Transfer images after capturing" />
                            <StackPanel IsEnabled="{Binding DoTransfer}" Margin="20,0,0,0">
                                <CheckBox IsChecked="{Binding DoDeleteLocal}" Content="Delete local copy after transfer" />
                                <CheckBox IsChecked="{Binding DoCommand}" Content="Execute remote command" />
                                <StackPanel Orientation="Vertical" Margin="20,0,0,0">
                                    <TextBox Text="{Binding CommandFormat, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding DoCommand, Converter={local:VisibilityConverter}}" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap"/>
                                    <TextBlock TextWrapping="Wrap" Text="(This remote command format is used as a fallback if the per-camera format is empty.)" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Power">
                <Grid Background="#FFE5E5E5" DataContext="{x:Static properties:S.Power}">
                    <StackPanel Margin="5">
                        <StackPanel Orientation="Horizontal" Margin="0,3,0,5">
                            <Label Content="Power socket type:" />
                            <ComboBox ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:PowerTypes}}}"
                                      SelectedIndex="{Binding PowerType, Converter={local:EnumToIntConverter}}" VerticalAlignment="Center"/>
                        </StackPanel>

                        <StackPanel Margin="0,5">
                            <StackPanel.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PowerType}" Value="{x:Static local:PowerTypes.Basic}">
                                            <Setter Property="StackPanel.Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>

                            <Grid Margin="0,0,0,5">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Mount name:" HorizontalAlignment="Right" />
                                <ComboBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"
                                          ItemsSource="{Binding Power.Names, Source={x:Static local:O.Default}}"
                                          SelectedValue="{Binding MountName, Mode=TwoWay}" />

                                <Label Grid.Row="1" Grid.Column="0" Content="Dome name:" HorizontalAlignment="Right" />
                                <ComboBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"
                                          ItemsSource="{Binding Power.Names, Source={x:Static local:O.Default}}"
                                          SelectedValue="{Binding DomeName, Mode=TwoWay}" />
                            </Grid>

                            <Grid Margin="0,3,0,5" VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Label Content="Host:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"/>
                                <Grid VerticalAlignment="Center" Margin="0" Grid.Row="0" Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox SelectedIndex="{Binding Netio.UseHttpsIndex}">
                                        <ComboBoxItem>http://</ComboBoxItem>
                                        <ComboBoxItem>https://</ComboBoxItem>
                                    </ComboBox>
                                    <TextBox Text="{Binding Netio.Host, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" />
                                    <TextBlock Text=":" Grid.Column="2" />
                                    <xctk:IntegerUpDown Grid.Column="3" Minimum="0" Maximum="65535" Value="{Binding Netio.Port}" />
                                </Grid>

                                <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                                       Content="User name:" />
                                <TextBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"
                                         Text="{Binding Netio.User, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Row="2" Grid.Column="0"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0"
                                       Content="Password:" />
                                <PasswordBox x:Name="NetioPasswordBox" Grid.Row="2" Grid.Column="1"
                                             Margin="0" VerticalAlignment="Center"
                                             PasswordChanged="NetioPasswordBox_PasswordChanged" />

                                <Button x:Name="NetioTestConnectionButton"
                                        Click="NetioTestConnectionButton_Click"
                                        Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0"
                                        Content="Test Connection" HorizontalAlignment="Center" Margin="0,5,0,0" />
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Python">
                <Grid Background="#FFE5E5E5" DataContext="{x:Static properties:S.Python}">
                    <StackPanel Orientation="Vertical" Margin="5">
                        <CheckBox IsChecked="{Binding IsEnabled}" Content="Enable Python. This is necessary for a number of functions:" />
                        <StackPanel Margin="40,0,0,0">
                            <TextBlock Text="Go to object" />
                            <TextBlock Text="Automatic exposure" />
                            <TextBlock Text="Image tracking" />
                            <TextBlock Text="Saving to FITS files" />
                            <TextBlock Text="Logging" />
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsEnabled, Converter={local:VisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Content="Append to path:" />
                                <TextBox Grid.Column="1" Text="{Binding Path, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="10,0" />
                                <Button Grid.Column="2" Content="Browse" VerticalAlignment="Center" Click="BrowseButton_Click" />
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Logging">
                <TabItem.Resources>
                    <DataTemplate x:Key="LoggerParametersTemplate" DataType="{x:Type local:LoggerParameters}">
                        <Grid Visibility="{Binding IsEnabled, Converter={local:VisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBox Grid.Column="0" Text="{Binding Filename, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                            <Label Grid.Column="1" Content="Keep:" />
                            <xctk:IntegerUpDown Grid.Column="2" Value="{Binding BackupCount}" VerticalAlignment="Center" />
                            <Label Grid.Column="3" Content="days" />
                        </Grid>
                    </DataTemplate>
                </TabItem.Resources>
                <Grid Background="#FFE5E5E5" DataContext="{x:Static properties:S.Logging}">
                    <StackPanel Margin="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Content="Logging directory:" />
                            <TextBox Grid.Column="1" Text="{Binding Directory, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="10,0" />
                            <Button Grid.Column="2" Content="Browse" VerticalAlignment="Center" Click="BrowseButton_Click" />
                        </Grid>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <CheckBox Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                      Content="Debug" IsChecked="{Binding Debug.IsEnabled}" />
                            <CheckBox Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"
                                      Content="Info" IsChecked="{Binding Info.IsEnabled}" />
                            <CheckBox Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"
                                      Content="Error" IsChecked="{Binding Error.IsEnabled}" />

                            <ContentControl Grid.Row="0" Grid.Column="1" Content="{Binding Debug}" Margin="10,0,0,0" ContentTemplate="{StaticResource LoggerParametersTemplate}" />
                            <ContentControl Grid.Row="1" Grid.Column="1" Content="{Binding Info}" Margin="10,0,0,0" ContentTemplate="{StaticResource LoggerParametersTemplate}" />
                            <ContentControl Grid.Row="2" Grid.Column="1" Content="{Binding Error}" Margin="10,0,0,0" ContentTemplate="{StaticResource LoggerParametersTemplate}" />
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
